{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nimport { employeeApi } from \"./api\";\nimport employeeReducer from \"./reducer/employeeReducer\";\nexport const store = configureStore({\n  reducer: {\n    [employeeApi.reducerPath]: employeeApi.reducer,\n    emplyee: employeeReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(employeeApi.middleware)\n});\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","setupListeners","employeeApi","employeeReducer","store","reducer","reducerPath","emplyee","middleware","getDefaultMiddleware","concat","dispatch"],"sources":["C:/Users/User/Desktop/ramp-fe-challenge/src/app/app.tsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\"\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\"\r\nimport { employeeApi } from \"./api\"\r\nimport employeeReducer from \"./reducer/employeeReducer\"\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [employeeApi.reducerPath]: employeeApi.reducer,\r\n    emplyee: employeeReducer,\r\n  },\r\n \r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(employeeApi.middleware),\r\n})\r\n\r\nsetupListeners(store.dispatch)\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAGA,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAE;IACP,CAACH,WAAW,CAACI,WAAb,GAA2BJ,WAAW,CAACG,OADhC;IAEPE,OAAO,EAAEJ;EAFF,CADyB;EAMlCK,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB,GAAGC,MAAvB,CAA8BR,WAAW,CAACM,UAA1C;AANJ,CAAD,CAA5B;AASPP,cAAc,CAACG,KAAK,CAACO,QAAP,CAAd"},"metadata":{},"sourceType":"module"}