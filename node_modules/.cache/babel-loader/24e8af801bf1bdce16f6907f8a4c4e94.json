{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    var _response$total;\n\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    setTotalTransactionsCount((_response$total = response === null || response === void 0 ? void 0 : response.total) !== null && _response$total !== void 0 ? _response$total : null);\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        return response;\n      }\n\n      const previousData = response.data;\n      const currentData = previousResponse.data;\n      const combinedArray = [...currentData, ...previousData];\n      console.log(response.nextPage);\n      console.log({\n        data: combinedArray,\n        nextPage: response.nextPage\n      });\n      return {\n        data: combinedArray,\n        nextPage: response.nextPage\n      };\n    });\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"5C7xQHueO9nKLl+7c12EAAA+DoA=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","response","page","nextPage","setTotalTransactionsCount","total","previousResponse","previousData","data","currentData","combinedArray","console","log","invalidateData"],"sources":["C:/Users/User/Desktop/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\nimport { useGetEmployeeQuery } from \"src/app/api\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    )\n      setTotalTransactionsCount(response?.total ?? null)\n\n    setPaginatedTransactions((previousResponse) => {\n      if (response === null || previousResponse === null) {\n        return response\n      }\n      const previousData = response.data;\n      const currentData = previousResponse.data;\n      \n      const combinedArray = [...currentData, ...previousData];\n      console.log(response.nextPage);\n      \n      console.log({ data: combinedArray, nextPage: response.nextPage });\n\n      return { data: combinedArray, nextPage: response.nextPage, }\n    })\n  }, [fetchWithCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAGA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAExD,IAFwD,CAAlE;EAIA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IAAA;;IACvC,MAAMS,QAAQ,GAAG,MAAML,cAAc,CACnC,uBADmC,EAEnC;MACEM,IAAI,EAAEJ,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACK;IADnE,CAFmC,CAArC;IAMEC,yBAAyB,oBAACH,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEI,KAAX,6DAAoB,IAApB,CAAzB;IAEFN,wBAAwB,CAAEO,gBAAD,IAAsB;MAC7C,IAAIL,QAAQ,KAAK,IAAb,IAAqBK,gBAAgB,KAAK,IAA9C,EAAoD;QAClD,OAAOL,QAAP;MACD;;MACD,MAAMM,YAAY,GAAGN,QAAQ,CAACO,IAA9B;MACA,MAAMC,WAAW,GAAGH,gBAAgB,CAACE,IAArC;MAEA,MAAME,aAAa,GAAG,CAAC,GAAGD,WAAJ,EAAiB,GAAGF,YAApB,CAAtB;MACAI,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACE,QAArB;MAEAQ,OAAO,CAACC,GAAR,CAAY;QAAEJ,IAAI,EAAEE,aAAR;QAAuBP,QAAQ,EAAEF,QAAQ,CAACE;MAA1C,CAAZ;MAEA,OAAO;QAAEK,IAAI,EAAEE,aAAR;QAAuBP,QAAQ,EAAEF,QAAQ,CAACE;MAA1C,CAAP;IACD,CAbuB,CAAxB;EAcD,CAvB2B,EAuBzB,CAACP,cAAD,EAAiBE,qBAAjB,CAvByB,CAA5B;EAyBA,MAAMe,cAAc,GAAGrB,WAAW,CAAC,MAAM;IACvCO,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAES,IAAI,EAAEV,qBAAR;IAA+BD,OAA/B;IAAwCG,QAAxC;IAAkDa;EAAlD,CAAP;AACD;;GApCelB,wB;UACsBD,c"},"metadata":{},"sourceType":"module"}