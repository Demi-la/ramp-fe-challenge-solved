{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ramp-fe-challenge\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const showButton = useSelector();\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : null;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    transactionsByEmployeeUtils === null || transactionsByEmployeeUtils === void 0 ? void 0 : transactionsByEmployeeUtils.invalidateData();\n    await (employeeUtils === null || employeeUtils === void 0 ? void 0 : employeeUtils.fetchAll());\n    await (paginatedTransactionsUtils === null || paginatedTransactionsUtils === void 0 ? void 0 : paginatedTransactionsUtils.fetchAll());\n    setIsLoading(false);\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils === null || paginatedTransactionsUtils === void 0 ? void 0 : paginatedTransactionsUtils.invalidateData();\n    await (transactionsByEmployeeUtils === null || transactionsByEmployeeUtils === void 0 ? void 0 : transactionsByEmployeeUtils.fetchById(employeeId));\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null && !(employeeUtils !== null && employeeUtils !== void 0 && employeeUtils.loading)) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"MainContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"RampBreak--l\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n          isLoading: isLoading,\n          defaultValue: EMPTY_EMPLOYEE,\n          items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n          label: \"Filter by employee\",\n          loadingLabel: \"Loading employees\",\n          parseItem: item => ({\n            value: item === null || item === void 0 ? void 0 : item.id,\n            label: `${item === null || item === void 0 ? void 0 : item.firstName} ${item === null || item === void 0 ? void 0 : item.lastName}`\n          }),\n          onChange: async newValue => {\n            if (newValue === null) {\n              return;\n            } else if ((newValue === null || newValue === void 0 ? void 0 : newValue.id) === \"\") {\n              return loadAllTransactions();\n            }\n\n            await loadTransactionsByEmployee(newValue === null || newValue === void 0 ? void 0 : newValue.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--l\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampGrid\",\n          children: [/*#__PURE__*/_jsxDEV(Transactions, {\n            transactions: transactions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), transactionsByEmployee === null ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"RampButton\",\n            disabled: paginatedTransactionsUtils === null || paginatedTransactionsUtils === void 0 ? void 0 : paginatedTransactionsUtils.loading,\n            onClick: async () => {\n              await loadAllTransactions();\n            },\n            children: \"View More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"ddKnBkl9gd7xn69GuWXcvgym9b8=\", false, function () {\n  return [useSelector, useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","useSelector","App","showButton","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","isLoading","setIsLoading","transactions","loadAllTransactions","invalidateData","fetchAll","loadTransactionsByEmployee","employeeId","fetchById","loading","item","value","id","label","firstName","lastName","newValue"],"sources":["C:/Users/User/Desktop/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\nimport { useSelector } from \"react-redux\"\nimport { RootState } from \"./app/app\";\n\nexport function App() {\n  const showButton = useSelector()\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true)\n    transactionsByEmployeeUtils?.invalidateData()\n\n    await employeeUtils?.fetchAll()\n    await paginatedTransactionsUtils?.fetchAll()\n\n    setIsLoading(false)\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils?.invalidateData()\n      await transactionsByEmployeeUtils?.fetchById(employeeId)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils?.loading) {\n      loadAllTransactions()\n    }\n    \n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n\n    <>\n   \n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item?.id,\n            label: `${item?.firstName} ${item?.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return;\n            }\n          \n            else if(newValue?.id === \"\") {\n              return loadAllTransactions()\n            } \n              \n              await loadTransactionsByEmployee(newValue?.id);\n            \n          }}\n        />\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {transactionsByEmployee === null?(\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils?.loading}\n              onClick={async () => {\n                await loadAllTransactions()\n              }}\n            >\n              View More\n            </button>\n          ) : \"\"}\n        </div>\n      </main>\n\n    </Fragment>\n\n    </>\n   \n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}