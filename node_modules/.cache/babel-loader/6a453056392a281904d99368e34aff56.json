{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const dispatch = use;\n  useEffect(() => {\n    if (paginatedTransactions === null) {}\n  });\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        return response;\n      }\n\n      const previousData = response.data;\n      const currentData = previousResponse.data;\n      const combinedArray = [...currentData, ...previousData];\n      console.log(response.nextPage);\n      console.log({\n        data: combinedArray,\n        nextPage: response.nextPage\n      });\n      return {\n        data: combinedArray,\n        nextPage: response.nextPage\n      };\n    });\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"mhAIgSSjEahVsO9NF5bdIy+arWA=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useEffect","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","dispatch","use","fetchAll","response","page","nextPage","previousResponse","previousData","data","currentData","combinedArray","console","log","invalidateData"],"sources":["C:/Users/User/Desktop/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\";\nimport { toggleEmployee } from \"src/app/reducer/employeeReducer\";\nimport { useDispatch } from \"react-redux\";\n\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n  const dispatch = use\n  useEffect(()=>{\n    if (paginatedTransactions === null) {\n      \n    }\n  })\n\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    )\n\n    setPaginatedTransactions((previousResponse) => {\n      if (response === null || previousResponse === null) {\n        return response\n      }\n      const previousData = response.data\n      const currentData = previousResponse.data\n\n      const combinedArray = [...currentData, ...previousData]\n      console.log(response.nextPage)\n\n      console.log({ data: combinedArray, nextPage: response.nextPage })\n\n      return { data: combinedArray, nextPage: response.nextPage }\n    })\n  }, [fetchWithCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAKA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EAEtE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAExD,IAFwD,CAAlE;EAGA,MAAMO,QAAQ,GAAGC,GAAjB;EACAT,SAAS,CAAC,MAAI;IACZ,IAAIM,qBAAqB,KAAK,IAA9B,EAAoC,CAEnC;EACF,CAJQ,CAAT;EAMA,MAAMI,QAAQ,GAAGX,WAAW,CAAC,YAAY;IACvC,MAAMY,QAAQ,GAAG,MAAMP,cAAc,CACnC,uBADmC,EAEnC;MACEQ,IAAI,EAAEN,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACO;IADnE,CAFmC,CAArC;IAOAN,wBAAwB,CAAEO,gBAAD,IAAsB;MAC7C,IAAIH,QAAQ,KAAK,IAAb,IAAqBG,gBAAgB,KAAK,IAA9C,EAAoD;QAClD,OAAOH,QAAP;MACD;;MACD,MAAMI,YAAY,GAAGJ,QAAQ,CAACK,IAA9B;MACA,MAAMC,WAAW,GAAGH,gBAAgB,CAACE,IAArC;MAEA,MAAME,aAAa,GAAG,CAAC,GAAGD,WAAJ,EAAiB,GAAGF,YAApB,CAAtB;MACAI,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACE,QAArB;MAEAM,OAAO,CAACC,GAAR,CAAY;QAAEJ,IAAI,EAAEE,aAAR;QAAuBL,QAAQ,EAAEF,QAAQ,CAACE;MAA1C,CAAZ;MAEA,OAAO;QAAEG,IAAI,EAAEE,aAAR;QAAuBL,QAAQ,EAAEF,QAAQ,CAACE;MAA1C,CAAP;IACD,CAbuB,CAAxB;EAcD,CAtB2B,EAsBzB,CAACT,cAAD,EAAiBE,qBAAjB,CAtByB,CAA5B;EAwBA,MAAMe,cAAc,GAAGtB,WAAW,CAAC,MAAM;IACvCQ,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAES,IAAI,EAAEV,qBAAR;IAA+BD,OAA/B;IAAwCK,QAAxC;IAAkDW;EAAlD,CAAP;AACD;;GA1CelB,wB;UAEsBD,c"},"metadata":{},"sourceType":"module"}