{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nimport { useGetEmployeeQuery } from \"src/app/api\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {} = useGetEmployeeQuery({\n    id: 2,\n    firstName: \"hello\",\n    lastName: \"\"\n  });\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        return response;\n      }\n\n      const previousData = response.data;\n      const currentData = previousResponse.data;\n      const combinedArray = [...currentData, ...previousData];\n      console.log(response.nextPage);\n      console.log({\n        data: combinedArray,\n        nextPage: response.nextPage\n      });\n      return {\n        data: combinedArray,\n        nextPage: response.nextPage\n      };\n    });\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"3PLi0MfkUQv0GRS4z6pAHFOc0ZU=\", false, function () {\n  return [useGetEmployeeQuery, useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","useGetEmployeeQuery","usePaginatedTransactions","id","firstName","lastName","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","response","page","nextPage","previousResponse","previousData","data","currentData","combinedArray","console","log","invalidateData"],"sources":["C:/Users/User/Desktop/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\nimport { useGetEmployeeQuery } from \"src/app/api\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const {} = useGetEmployeeQuery({\n    id:2,\n    firstName:\"hello\",\n    lastName:\"\"\n  })\n\n\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    )\n\n    setPaginatedTransactions((previousResponse) => {\n      if (response === null || previousResponse === null) {\n        return response\n      }\n      const previousData = response.data;\n      const currentData = previousResponse.data;\n      \n      const combinedArray = [...currentData, ...previousData];\n      console.log(response.nextPage);\n      \n      console.log({ data: combinedArray, nextPage: response.nextPage });\n\n      return { data: combinedArray, nextPage: response.nextPage }\n    })\n  }, [fetchWithCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,mBAAT,QAAoC,aAApC;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM,KAAKD,mBAAmB,CAAC;IAC7BE,EAAE,EAAC,CAD0B;IAE7BC,SAAS,EAAC,OAFmB;IAG7BC,QAAQ,EAAC;EAHoB,CAAD,CAA9B;EAOA,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BP,cAAc,EAAlD;EACA,MAAM,CAACQ,qBAAD,EAAwBC,wBAAxB,IAAoDV,QAAQ,CAExD,IAFwD,CAAlE;EAIA,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,YAAY;IACvC,MAAMa,QAAQ,GAAG,MAAML,cAAc,CACnC,uBADmC,EAEnC;MACEM,IAAI,EAAEJ,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACK;IADnE,CAFmC,CAArC;IAOAJ,wBAAwB,CAAEK,gBAAD,IAAsB;MAC7C,IAAIH,QAAQ,KAAK,IAAb,IAAqBG,gBAAgB,KAAK,IAA9C,EAAoD;QAClD,OAAOH,QAAP;MACD;;MACD,MAAMI,YAAY,GAAGJ,QAAQ,CAACK,IAA9B;MACA,MAAMC,WAAW,GAAGH,gBAAgB,CAACE,IAArC;MAEA,MAAME,aAAa,GAAG,CAAC,GAAGD,WAAJ,EAAiB,GAAGF,YAApB,CAAtB;MACAI,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACE,QAArB;MAEAM,OAAO,CAACC,GAAR,CAAY;QAAEJ,IAAI,EAAEE,aAAR;QAAuBL,QAAQ,EAAEF,QAAQ,CAACE;MAA1C,CAAZ;MAEA,OAAO;QAAEG,IAAI,EAAEE,aAAR;QAAuBL,QAAQ,EAAEF,QAAQ,CAACE;MAA1C,CAAP;IACD,CAbuB,CAAxB;EAcD,CAtB2B,EAsBzB,CAACP,cAAD,EAAiBE,qBAAjB,CAtByB,CAA5B;EAwBA,MAAMa,cAAc,GAAGvB,WAAW,CAAC,MAAM;IACvCW,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEO,IAAI,EAAER,qBAAR;IAA+BD,OAA/B;IAAwCG,QAAxC;IAAkDW;EAAlD,CAAP;AACD;;GA1CenB,wB;UACHD,mB,EAOyBD,c"},"metadata":{},"sourceType":"module"}