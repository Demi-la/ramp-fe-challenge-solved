{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ramp-fe-challenge\\\\src\\\\components\\\\InputCheckbox\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// export const InputCheckbox: InputCheckboxComponent =({ id, checked, disabled, onChange }) => {\n// export const InputCheckbox: InputCheckboxComponent = ({ id, disabled, onChange }) => {\nexport const InputCheckbox = _ref => {\n  _s();\n\n  let {\n    id,\n    checked: initialChecked = false,\n    disabled,\n    onChange\n  } = _ref;\n  const {\n    current: inputId\n  } = useRef(`RampInputCheckbox-${id}`);\n  const [checked, setChecked] = useState(() => {\n    const storedValue = localStorage.getItem(inputId);\n    return storedValue !== null ? JSON.parse(storedValue) : initialChecked;\n  });\n  useEffect(() => {\n    // Save checkbox state to localStorage whenever it changes\n    localStorage.setItem(inputId, JSON.stringify(checked));\n  }, [inputId, checked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampInputCheckbox--container\",\n    \"data-testid\": inputId,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: inputId,\n      className: classNames(\"RampInputCheckbox--label\", {\n        \"RampInputCheckbox--label-checked\": checked,\n        \"RampInputCheckbox--label-disabled\": disabled\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: inputId,\n      type: \"checkbox\",\n      className: \"RampInputCheckbox--input\",\n      checked: checked,\n      disabled: disabled,\n      onChange: () => {\n        setChecked(prevChecked => !prevChecked);\n        onChange(!checked);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputCheckbox, \"iCCg635/BQGpk6rhQPMMAD0xGU8=\");\n\n_c = InputCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputCheckbox\");","map":{"version":3,"names":["classNames","useRef","useEffect","useState","InputCheckbox","id","checked","initialChecked","disabled","onChange","current","inputId","setChecked","storedValue","localStorage","getItem","JSON","parse","setItem","stringify","prevChecked"],"sources":["C:/Users/User/Desktop/ramp-fe-challenge/src/components/InputCheckbox/index.tsx"],"sourcesContent":["import classNames from \"classnames\"\nimport { useRef, useEffect, useState } from \"react\"\nimport { InputCheckboxComponent } from \"./types\"\n\n\n\n// export const InputCheckbox: InputCheckboxComponent =({ id, checked, disabled, onChange }) => {\n  // export const InputCheckbox: InputCheckboxComponent = ({ id, disabled, onChange }) => {\n\n  export const InputCheckbox: InputCheckboxComponent = ({ id, checked: initialChecked = false, disabled, onChange }) => {\n const { current: inputId } = useRef(`RampInputCheckbox-${id}`);\n\n\n  const [checked, setChecked] = useState(() => {\n    const storedValue = localStorage.getItem(inputId)\n    return storedValue !== null ? JSON.parse(storedValue) : initialChecked \n  })\n\n  useEffect(() => {\n    // Save checkbox state to localStorage whenever it changes\n    localStorage.setItem(inputId, JSON.stringify(checked))\n  }, [inputId, checked])\n\n\n  return (\n    <div className=\"RampInputCheckbox--container\" data-testid={inputId}>\n      <label\n        htmlFor={inputId}\n        className={classNames(\"RampInputCheckbox--label\", {\n          \"RampInputCheckbox--label-checked\": checked,\n          \"RampInputCheckbox--label-disabled\": disabled,\n        })}\n      />\n      <input\n        id={inputId}\n        type=\"checkbox\"\n        className=\"RampInputCheckbox--input\"\n        checked={checked}\n        disabled={disabled}\n        onChange={() => {\n          setChecked((prevChecked: boolean) => !prevChecked)\n          onChange(!checked)\n        }}\n      />\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAKA;AACE;AAEA,OAAO,MAAMC,aAAqC,GAAG,QAAiE;EAAA;;EAAA,IAAhE;IAAEC,EAAF;IAAMC,OAAO,EAAEC,cAAc,GAAG,KAAhC;IAAuCC,QAAvC;IAAiDC;EAAjD,CAAgE;EACvH,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAAuBV,MAAM,CAAE,qBAAoBI,EAAG,EAAzB,CAAnC;EAGC,MAAM,CAACC,OAAD,EAAUM,UAAV,IAAwBT,QAAQ,CAAC,MAAM;IAC3C,MAAMU,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,OAArB,CAApB;IACA,OAAOE,WAAW,KAAK,IAAhB,GAAuBG,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAvB,GAAiDN,cAAxD;EACD,CAHqC,CAAtC;EAKAL,SAAS,CAAC,MAAM;IACd;IACAY,YAAY,CAACI,OAAb,CAAqBP,OAArB,EAA8BK,IAAI,CAACG,SAAL,CAAeb,OAAf,CAA9B;EACD,CAHQ,EAGN,CAACK,OAAD,EAAUL,OAAV,CAHM,CAAT;EAMA,oBACE;IAAK,SAAS,EAAC,8BAAf;IAA8C,eAAaK,OAA3D;IAAA,wBACE;MACE,OAAO,EAAEA,OADX;MAEE,SAAS,EAAEX,UAAU,CAAC,0BAAD,EAA6B;QAChD,oCAAoCM,OADY;QAEhD,qCAAqCE;MAFW,CAA7B;IAFvB;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MACE,EAAE,EAAEG,OADN;MAEE,IAAI,EAAC,UAFP;MAGE,SAAS,EAAC,0BAHZ;MAIE,OAAO,EAAEL,OAJX;MAKE,QAAQ,EAAEE,QALZ;MAME,QAAQ,EAAE,MAAM;QACdI,UAAU,CAAEQ,WAAD,IAA0B,CAACA,WAA5B,CAAV;QACAX,QAAQ,CAAC,CAACH,OAAF,CAAR;MACD;IATH;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CArCQ;;GAAMF,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}